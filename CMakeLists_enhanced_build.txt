cmake_minimum_required(VERSION 3.12)
project(enhanced_fourier_math_cpp)

set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

# Find required packages
find_package(pybind11 REQUIRED)

# Add optimization flags for Apple Silicon
if(APPLE)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -O3 -march=native -mtune=native")
    if(CMAKE_SYSTEM_PROCESSOR MATCHES "arm64")
        set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -mcpu=apple-m1")
    endif()
endif()

# Add threading support
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -pthread")

# Create the enhanced module
pybind11_add_module(enhanced_fourier_math_cpp 
    enhanced_fourier_math.cpp
    enhanced_python_bindings.cpp
)

# Set properties
set_target_properties(enhanced_fourier_math_cpp PROPERTIES
    CXX_VISIBILITY_PRESET "hidden"
    INTERPROCEDURAL_OPTIMIZATION TRUE
)

# Link math library
target_link_libraries(enhanced_fourier_math_cpp PRIVATE m)

# Compiler-specific optimizations
target_compile_definitions(enhanced_fourier_math_cpp PRIVATE VERSION_INFO=${EXAMPLE_VERSION_INFO})
